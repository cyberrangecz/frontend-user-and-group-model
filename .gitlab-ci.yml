image: cypress/browsers:node12.18.0-chrome83-ff77

stages:
  - codeStyle
  - build
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  paths:
    - .npm/

before_script:
  - cp $NPMRC_PULL ~/.npmrc
  - npm ci --cache .npm --prefer-offline --ignore-scripts

codeStyle:
  stage: codeStyle
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - npm run lint
  only:
    - triggers
    - branches
    - tags

buildLibrary:
  stage: build
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - npm run build-library
  only:
    - triggers
    - branches
    - tags
  artifacts:
    paths:
      - ./dist
    expire_in: 1 hour

editVersionAndDeploy:
  stage: deploy
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  before_script:
    # get tag version
    - export VERSION=$(if [[ "$CI_COMMIT_TAG" == "" ]]; then echo "GitLab tag is missing!"; else echo $CI_COMMIT_TAG | cut -c 2-; fi)
    - echo $VERSION
    # ssh config
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o 'StrictHostKeyChecking no' git@gitlab.ics.muni.cz
    # git config
    - git config --global user.email "$GIT_SERVICE_USER_EMAIL"
    - git config --global user.name "$GIT_SERVICE_USER_NAME"
    - git remote set-url origin "$REPOSITORY_SSH_URL"
    - git fetch
    - git checkout master
    - git pull

  script:
    - npm run ci-update-version
    - git commit -am "Update project package.json version based on GitLab tag. Done by CI"
    - cp $NPMRC_PULL ~/.npmrc
    - npm run ci-build-and-pack
    - cp $NPMRC_PUSH ~/.npmrc
    - npm run ci-publish-package
    - git push -o ci.skip
  only:
    - tags
